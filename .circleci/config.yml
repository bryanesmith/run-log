version: 2.1

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
jobs:

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  build_run_log_frontend:

    parameters:

      node_version:
        description: NodeJS version
        type: string
        default: 9.10.1

      yarn_version:
        description: Yarn version
        type: string
        default: 0.27.5

    docker:
      - image: circleci/node:<< parameters.node_version >>

    environment:
      WEB_ASSETS_DIST: backend/src/main/resources/frontend-dist

    steps:
      - run:
          name: Install Yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version << parameters.yarn_version >>
            yarn -v
      - checkout
      - run:
          name: Create frontend config
          command: cp frontend/src/config-template.json frontend/src/config.json
      - run:
          name: Build frontend
          command: |
            cd frontend
            yarn && yarn build
            cd ..
      - run:
          name: Prepare web assets directory
          command: |
            if [ ! -d "$WEB_ASSETS_DIST" ]; then
              mkdir -p "$WEB_ASSETS_DIST"
            fi
      - run:
          name: Copy web assets
          command: cp frontend/dist/* "$WEB_ASSETS_DIST"
      - run:
          name: View web assets
          command: ls "$WEB_ASSETS_DIST"
      - persist_to_workspace:
          root: .
          paths:
            - backend/

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  build_run_log_backend:

    parameters:

      sbt_version:
        description: sbt version
        type: string
        default: 1.0.4

    docker:
      - image: openjdk:8

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install sbt
          command: |
            apt-get update
            apt-get install -y sbt=<< parameters.sbt_version >>
      - run:
          name: Run backend unit tests
          command: echo "TODO"
      - run:
          name: Build JAR
          command: sbt assembly

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  deploy_run_log:

    docker:
      - image: openjdk:8

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Bar
          command: echo "Deploying"

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
workflows:
  version: 2
  build_and_deploy_run_log:
    jobs:
      - build_run_log_frontend
      - build_run_log_backend:
          requires:
            - build_run_log_frontend
      - deploy_run_log:
          requires:
            - build_run_log_backend
